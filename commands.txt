------------------------     
inside emsdk directory:
------------------------
Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
git pull
./emsdk install latest
./emsdk activate latest

--> then switch to the directory for input and putput files

Build simple WASM from C++:
emcc draw.cpp -o draw.js -s EXPORTED_FUNCTIONS='["_drawRectangleOnCanvas"]' -s EXPORTED_RUNTIME_METHODS='["ccall"]' -s ALLOW_MEMORY_GROWTH=1 -O3

Python server to serve as website at  http://localhost:8000/
python -m http.server 8000

- keep index.html
- wasm builds just the JS file and WASM file
- use incognito window for http://localhost:8000/  to avoid caching
SHIFT refresh to avoid caching
-------------------------------------------------------------------------

GIT COMMANDS:
git add .
git commit -m "message"
git push -u origin master

UNDO:
git reset --hard HEAD
--------------------------------------------------------------------------
optimizations:

s2wasm --import-memory
wasm-opt -O3
create large array with random numbers and calculate average

https://stackoverflow.com/questions/48173979/why-is-webassembly-function-almost-300-time-slower-than-same-js-function

http://link.crwd.fr/45ZL#https://blog.acolyer.org/2017/09/18/bringing-the-web-up-to-speed-with-webassembly/?utm_campaign=crowdfire&utm_content=crowdfire&utm_medium=social&utm_source=twitter

https://pspdfkit.com/blog/2017/webassembly-a-new-hope/